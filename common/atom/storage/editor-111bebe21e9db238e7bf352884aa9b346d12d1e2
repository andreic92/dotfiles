{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":24,"width":1920,"height":1023,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/jump/Development/mdm/install/new/working_table/scripts"],"buffers":[{"text":"#!/bin/bash\n\n# path of this script\nconfigurer_script_path=$(cd `dirname $0` && pwd)\n\n# this file should be located into DIR/scripts directory. It will go one directory level up and will get the root of this application\ncd $configurer_script_path/..\napp_path=\"$(pwd)\"\nclient_dir_name_lower_case=$(basename `pwd` | sed 's/.*/\\L&/')\nclient_dir_name=$(basename `pwd`)\napp_profile_file=\"$app_path/scripts/aura_profile.sh\"\n\n# go back into script directory\ncd $configurer_script_path\n\n#### global variables ####\nini_file_extension=\"_ini\"\n\n# configuration variables\nconfiguration_file=\"$configurer_script_path/conf.properties\"\n\n# loaded from $configuration_file\nagent_client_id=\"\"\nagent_server=\"\"\nremote_logger_client_id=\"\"\nzk_host=\"\"\nzk_port=\"\"\njetty_port=\"\"\njetty_stop_port=\"\"\nremote_logger_logging_server=\"\"\nclient_jetty_port=\"\"\nclients_collection_names=\"\"\nclients_java_memory=\"[CLIENTS_JAVA_MEMORY]\" # default value for being skipped if not configured\n\n# processed\nclients_collection_names_array=()\n\n# file for which the placeholders will be replaced with the configured data\nfile_aura_client_crontab=\"aura_crontab\"\nfile_aura_service_script=\"aura\"\nfile_agent_conf=\"AwintaAgent/conf/AwintaAgent.xml\"\nfile_aura_jetty_conf=\"server/jetty/etc/config.properties\"\n\n# function for checking the script dependencies\nfunction check_dependencies() {\n\tif [ ! -f $configuration_file ]; then\n\t\techo -e \"\\t You have to create a configuration file right next to this script! Please create this file and try again!\"\n\t\texit 1\n\tfi\n\n\t. $configuration_file\n\tvalid_values=true\n\tif [ \"x$agent_client_id\" == \"x\" ] || [ \"$agent_client_id\" == \"l1j00000\" ]; then\n\t\techo -e \"\\t You have to set the agent client id!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$agent_server\" == \"x\" ]; then\n\t\techo -e \"\\t The agent server url cannot be empty!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$remote_logger_client_id\" == \"x\" ] || [ \"$remote_logger_client_id\" == \"l1j00000\" ]; then\n\t\techo -e \"\\t You have to set the remote logger client id!!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$zk_host\" == \"x\" ]; then\n\t\techo -e \"\\t Zookeeper host cannot be empty!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$zk_port\" == \"x\" ]; then\n\t\techo -e \"\\t Zookeeper port cannot be empty!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$jetty_port\" == \"x\" ]; then\n\t\techo -e \"\\t Jetty port cannot be empty!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$jetty_stop_port\" == \"x\" ]; then\n\t\techo -e \"\\t Jetty stop port cannot be empty!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$remote_logger_logging_server\" == \"x\" ]; then\n\t\techo -e \"\\t Remote logging server cannot be empty!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$client_jetty_port\" == \"x\" ]; then\n\t\techo -e \"\\t Clients jetty port cannot be empty!\"\n\t\tvalid_values=false\n\tfi\n\tif [ \"x$clients_collection_names\" == \"x\" ]; then\n\t\techo -e \"\\t You have to provide collection names for clients!\"\n\t\tvalid_values=false\n\telse\n\t\tclients_collection_names_array=(${clients_collection_names//,/ })\n\t\tif [ ${#clients_collection_names_array[@]} -eq 0 ]; then\n\t\t\techo -e \"\\t You have to provide collection names for clients!\"\n\t\t\tvalid_values=false\n\t\telse\n\t\t\tclients_collection_names_array_temp=($(printf \"%s\\n\" \"${clients_collection_names_array[@]}\" | sort | uniq -c | sort -rnk1 | awk '{ print $2 }'))\n\t\t\tif [ ${#clients_collection_names_array_temp[@]} -ne ${#clients_collection_names_array[@]} ]; then\n\t\t\t\techo -e \"\\t You have to provide unique collection names!\"\n\t\t\t\tvalid_values=false\n\t\t\tfi\n\t\tfi\n\tfi\n\tif [ \"$valid_values\" == \"false\" ]; then\n\t\techo -e \"\\t The configuration file is not complete! Please check the errors and add the required fields! Configuration aborted!\"\n\t\texit 1\n\tfi\n}\n\n# function that replace the placeholders with the configured data\nfunction edit_files_containing_placeholders() {\n\techo -e \"\\t Replacing placeholders with configured data...\"\n\t. $configuration_file\n\t# replacing the placeholders with real data\n\tcd $app_path\n\n\tsu - jump -c \"cd `pwd`; cp $file_aura_client_crontab$ini_file_extension $file_aura_client_crontab\"\n\tsu - jump -c \"cd `pwd`; cp $file_aura_service_script$ini_file_extension $file_aura_service_script\"\n\tsu - jump -c \"cd `pwd`; cp $file_agent_conf$ini_file_extension $file_agent_conf\"\n\tsu - jump -c \"cd `pwd`; cp $file_aura_jetty_conf$ini_file_extension $file_aura_jetty_conf\"\n\n\tsed -i \"s|\\[AURA_PATH_PLACEHOLDER\\]|$app_path|\" $file_aura_client_crontab $file_aura_service_script $file_agent_conf\n\tsed -i \"s|\\[AWINTA_AGENT_CLIENT_ID\\]|$agent_client_id|\" $file_agent_conf\n\tsed -i \"s|\\[AWINTA_AGENT_SERVER\\]|$agent_server|\" $file_agent_conf\n\tsed -i \"s|\\[JETTY_PORT\\]|$jetty_port|\" $file_aura_jetty_conf\n\tsed -i \"s|\\[JETTY_STOP_PORT\\]|$jetty_stop_port|\" $file_aura_jetty_conf\n}\n\n# function for creating the client's replicas\nfunction install_clients() {\n\techo -e \"\\t Creating clients...\"\n\tcd $app_path/server/index/\n\n\t# clean up\n\techo -e \"\\t\\t Remove following clients directories: $(find -maxdepth 1 -name 'collection*' | awk 'BEGIN{res=\"\"}{res=res\"\\\"\"$1\"\\\",\";}END{print substr(res, 1, length(res)-1)}')\"\n\tfind -maxdepth 1 -name 'client*' | xargs -I '{}' rm -r {}\n\n\tnumber_of_collections=${#clients_collection_names_array[@]}\n\tfor (( i=0; i<${number_of_collections}; i++ ));\n\tdo\n\t\t# increment collection number and init the new collection directory name\n\t\tcollection_number=$(($i+1))\n\t\tclient_collection_name=${clients_collection_names_array[$i]}\n\t\t\n\t\t# create the new collection directory\n\t\tsu - jump -c \"cd `pwd`; cp -r inst_collection $client_collection_name\"\n\t\tsu - jump -c \"cd `pwd`; mv $client_collection_name/core.properties$ini_file_extension $client_collection_name/core.properties\"\n\n\t\t# replace placeholders \n\t\tsed -i \"s|\\[SOLR_COLLECTION\\]|$client_collection_name|\" $client_collection_name/core.properties\n\n\t\t# print an info message\n\t\techo -e \"\\t\\t Client created with collection name $client_collection_name\"\n\tdone\n\tcd $app_path\n}\n\n# function for creating the aura profile file\nfunction create_aura_profile_file() {\n\techo -e \"\\t Create \\\"aura_profile.sh\\\" file...\"\n \t. $configuration_file\n\n\tcd $app_path\n\tif [ -f $app_profile_file ]; then\n\t\trm $app_profile_file\n\tfi\n\ttouch $app_profile_file\n\tchown jump:jump $app_profile_file\n\n\t# add to profile the required configurations\n\tprofile_exports=(\n\t\t''\n\t\t'# COMMON'\n\t\t'export AURA_SERVER_PATH=\"[AURA_PATH_PLACEHOLDER]\"'\n\t\t'export ZK_HOST=\"[ZK_HOST]\"'\n\t\t'export ZK_PORT=\"[ZK_PORT]\"'\n\t\t''\n\t\t'export AURA_BACKUP_PATH=\"/home/jump/dsoroot/application/aura_backup\"'\n\t\t'export AURA_CI_OPTS=\"-DzookeeperHost=$ZK_HOST -DzookeeperPort=$ZK_PORT -Dremote.logger.client.id=[REMOTE_LOGGER_CLIENT_ID] -Dremote.logger.logging.server=[REMOTE_LOGGER_SERVER]\"'\n\t\t'export AURA_CLIENTS_OPTS=\"[CLIENTS_JAVA_MEMORY]\"'\n\t)\n\t\n\tfor export_statement in \"${profile_exports[@]}\"\n\tdo\n\t\tfinal_value=$export_statement\n\t\tfinal_value=$(echo $final_value | sed \"s|\\[ZK_HOST\\]|$zk_host|g\")\n\t\tfinal_value=$(echo $final_value | sed \"s|\\[ZK_PORT\\]|$zk_port|g\")\n\t\tfinal_value=$(echo $final_value | sed \"s|\\[REMOTE_LOGGER_SERVER\\]|$remote_logger_logging_server|g\")\n\t\tfinal_value=$(echo $final_value | sed \"s|\\[REMOTE_LOGGER_CLIENT_ID\\]|$remote_logger_client_id|g\")\n\t\tfinal_value=$(echo $final_value | sed \"s|\\[CLIENTS_JAVA_MEMORY\\]|$clients_java_memory|g\")\n\t\tfinal_value=$(echo $final_value | sed \"s|\\[CLIENTS_JAVA_MEMORY\\]|$clients_java_memory|g\")\n\t\tfinal_value=$(echo $final_value | sed \"s|\\[AURA_PATH_PLACEHOLDER\\]|$app_path|g\")\n\n\t\tif [ -z \"$final_value\" ]; then\n\t\techo $final_value >> $app_profile_file\n\t\t\tcontinue\n\t\tfi\n\t\tif [ $(echo $final_value | egrep -c \".*\\[.*\\].*\") -gt 0 ]; then\n\t\t\techo -e \"\\t\\t Profile entry \\\"$final_value\\\" skipped!\"\n\t\t\tcontinue\n\t\tfi\n\t\tis_in_profile_file=$(grep -c \"$final_value\" $app_profile_file)\n\t\tif [ $is_in_profile_file -eq 0 ]; then\n\t\t\techo $final_value >> $app_profile_file\n\t\tfi\n\tdone\n\tchmod +x $app_profile_file\n}\n\n# function that install the application as a service\nfunction install_service() {\n\techo -e \"\\t Install application as a service...\"\n\tnew_service_file_name=$client_dir_name_lower_case\n\tmv $file_aura_service_script $new_service_file_name\n\n\tchmod +x $new_service_file_name\n\tchown root:root $new_service_file_name\n\tcp $new_service_file_name /etc/init.d/\n\trm $new_service_file_name\n\tchkconfig --level 0356 $new_service_file_name on\n}\n\n# function that install the cronjobs for the current application\nfunction install_crontab() {\n\techo -e \"\\t Install cronjobs for this application...\"\n\tnew_crontab_file_name=$client_dir_name_lower_case\"_crontab\"\n\tmv $file_aura_client_crontab $new_crontab_file_name\n\n\tchmod 644 $new_crontab_file_name\n\tcp $new_crontab_file_name /etc/cron.d/\n\trm $new_crontab_file_name\n\tservice crond restart\n}\n\n# function for installing the sudoers permissions\nfunction install_sudoers_permissions() {\n\techo -e \"\\t Installing sudoers permissions for further operations...\"\n\tsudoers_file=/etc/sudoers.d/aura_sudo\n\techo \"jump\tALL=NOPASSWD:/bin/cp\" > $sudoers_file\n\tchown root:root $sudoers_file\n\tchmod 0440 $sudoers_file\n}\n\n# function for installing the NTPD service - for time syncronization\nfunction install_ntpd() {\n\techo -e \"\\t Installing ntpd\"\n\tchkconfig --level 35 ntpd on\n\tservice ntpd start\n}\n\n# install system limits for open files\nfunction install_system_limits() {\n\techo -e \"\\t Installing system limits...\"\n\n\tlimits_conf_file=\"/etc/security/limits.conf\"\n\n\tsoft_limit_conf=\"jump soft nofile 10240\"\n\thard_limit_conf=\"jump hard nofile 10240\"\n\n\tis_configured=$(grep -c \"$soft_limit_conf\" $limits_conf_file)\n\tif [ $is_configured -eq 0 ]; then\n\t\techo $soft_limit_conf >> $limits_conf_file\n\tfi\n\n\tis_configured=$(grep -c \"$hard_limit_conf\" $limits_conf_file)\n\tif [ $is_configured -eq 0 ]; then\n\t\techo $hard_limit_conf >> $limits_conf_file\n\tfi\n\n}\n\ncheck_dependencies\nedit_files_containing_placeholders\ncreate_aura_profile_file\ninstall_clients\ninstall_service\ninstall_crontab\ninstall_sudoers_permissions\ninstall_ntpd\ninstall_system_limits\n\necho -e \"\\n\\t DONE!\"\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":283,"column":0}},"properties":{"type":"selection","editorId":8,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/jump/Development/mdm/install/new/working_table/scripts/configurer.sh","digestWhenLastPersisted":"38c13926a7299df686bdc346a0924a9f3a188314","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":8,"softTabs":false,"displayBuffer":{"id":9,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/jump/Development/mdm/install/new/working_table/scripts/configurer.sh","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/home/jump/Development/mdm/install/new/working_table/scripts/configurer.sh","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-shellscript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/jump/Development/mdm/install/new/working_table/scripts/configurer.sh":1459928388935},"metrics":{"sessionLength":5961},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/jump/Development/mdm/install/new/working_table/scripts":{"isExpanded":true,"entries":{"clients":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/jump/Development/mdm/install/new/working_table/scripts/configurer.sh","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}